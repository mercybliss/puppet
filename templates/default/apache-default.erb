<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    ServerName <%= @site_address %>
    DocumentRoot <%= @apache_doc_root %>

   <% if node['lbr']['ssl']['enabled']  == true %>
    # Fake SSL if Loadbalancer does SSL-Offload
    <IfModule env_module>
        SetEnv HTTPS on
    </IfModule>
    <% end %>

    <% if node['deploy']['webapp']['ssl_support']  == true or node['lbr']['ssl']['enabled'] == true %>
    # SSL Rewrites if applicable
    RewriteEngine on

    # Check  and make sure the request forwarded from LBR is/isn't
    RewriteCond %{HTTP:X-Forwarded-Proto} !https

    # This checks to make sure the connection is not already HTTPS
    RewriteCond %{HTTPS} !=on
    RewriteCond %{HTTP_HOST} !^localhost [NC]
    RewriteCond %{REMOTE_ADDR} !^127\.0\.0\.1$
    RewriteCond %{REQUEST_URI} !^/keepalive\.html$
    RewriteCond %{REQUEST_URI} !^/api/system/health-check$
    RewriteCond %{REQUEST_URI} !^/webapp/api/system/health-check$

    # This rule will redirect users from their original location, to the same location but using HTTPS.
    # i.e.  http://www.example.com/foo/ to https://www.example.com/foo/ The leading slash is made optional so
    # that this will work either in httpd.conf or .htaccess context
    RewriteRule ^/(.*) https://%{HTTP_HOST}<%= node['local_port'] %>/$1 [NC,R=301,L]
    <% end %>

    #--- Log Format, configuration and locations -----------------------#
    # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
    # error, crit, alert, emerg.
    # It is also possible to configure the loglevel for particular modules, e.g.
    <% if node['deploy']['webapp']['ssl_support'] == true or node['lbr']['ssl']['enabled'] == true %>
    LogLevel info ssl:warn
    <% else %>
    LogLevel info
    <% end %>

    # Flag requests from the loop-back interface (localhost 127.0.0.1)
    #SetEnvIf Remote_Addr "127\.0\.0\.1" dontlog
    #SetEnvIf Remote_Addr "::1" dontlog

    # Flag requests that are monitoring based (DD, Stackdriver, local ping)
    SetEnvIf User-agent .*ELB-HealthChecker*. monitoring
    SetEnvIf User-agent .*Datadog*. monitoring
    SetEnvIf User-agent .*dummy*. monitoring

    # Flag requests for the robots.txt file
    #SetEnvIf Request_URI "^/robots\.txt$" dontlog

    LogFormat "{\"time\":\"%t\", \"sourceIP\":\"%{X-Forwarded-For}i\", \"remoteIP\":\"%a\", \"host\":\"%V\", \"request\":\"%U\", \"query\":\"%q\", \"method\":\"%m\", \"status\":\"%>s\", \"userAgent\":\"%{User-agent}i\", \"referer\":\"%{Referer}i\", \"Duration\":\"%T.%D\"}" leapache

    ErrorLog ${APACHE_LOG_DIR}/error.log
    #CustomLog ${APACHE_LOG_DIR}/access.log leapache
    CustomLog ${APACHE_LOG_DIR}/access.log leapache env=!dontlog
    CustomLog ${APACHE_LOG_DIR}/localhost-access.log leapache env=dontlog

    <Directory />
        Options FollowSymLinks
        AllowOverride All
    </Directory>

    <Directory <%= node['apache']['doc-root'] %>/>
        Options FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        allow from all
        Require all granted
    </Directory>

</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
